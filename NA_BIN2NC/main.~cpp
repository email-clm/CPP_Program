#include <iostream>
#include <fstream>
#include <string>
#include <cmath>
#include <stdlib>

using namespace std;

int main()
{
const int ncol = 349;
const int nrow = 277;

float y[nrow];
float x[ncol];
ifstream inx;
inx.open("x.txt");
for(int c = 0; c < ncol; c++)
inx>>x[c];
inx.close();

ifstream iny;
iny.open("y.txt");
for(int r = 0; r < nrow; r++)
iny>>y[r];
iny.close();

string variable;
cout<<"please enter the name of variable: "<<endl;
cin>>variable;

int time;
cout<<"Please enter the number (time dimension) of spatial dataset for conversion: "<<endl;
cin>>time;

string *infilename = new string[time];
for(int i = 0; i < time; i++)
{
cout<<"please enter the file name of "<<i+1<<" dimension "<<endl;
cin>>infilename[i];
}

float **lon;
float **lat;
lon = new float *[nrow];
lat = new float *[nrow];
for(int i = 0; i < nrow; i++)
        {
        lon[i] = new float [ncol];
        lat[i] = new float [ncol];
        }

ifstream inlat;
ifstream inlon;
inlat.open("lat.txt");
inlon.open("lon.txt");
for(int r = 0; r < nrow; r++)
        {
        for(int c = 0; c < ncol; c++)
                {
                inlat>>lat[r][c];
                inlon>>lon[r][c];
                }
        }
inlat.close();
inlon.clear();

float ***value;
value = new float **[time];
for(int i = 0; i < time; i++)
{
        value[i] = new float *[nrow];
        for(int ii = 0; ii < nrow; ii++)
        {
        value[i][ii] = new float [ncol];
        }
}

for(int ii = 0;ii < time; ii++)
{
ifstream infile;
infile.open(infilename[ii].c_str(), ios::in | ios::binary);
for(int row = 0; row < nrow; row++)
        {
        for(int col = 0; col < ncol; col++)
                {
                infile.read((char*) &value[ii][row][col], sizeof(float));
                }
        }
infile.close();
}

string outfilename;
cout<<"please enter the file name for the output: "<<endl;
cin>>outfilename;
ofstream outstream;
outstream.open(outfilename.c_str());

outstream<<"netcdf "<<variable<<" {"<<endl;
outstream<<"dimensions:"<<endl;
outstream<<" y = 277 ;"<<endl;
outstream<<" x = 349 ;"<<endl;
outstream<<" time = "<<time<<";"<<endl;
outstream<<"variables:"<<endl;
outstream<<"int Lambert_Conformal ;"<<endl;
outstream<<"Lambert_Conformal:grid_mapping_name = \"lambert_conformal_conic\" ;"<<endl;
outstream<<"Lambert_Conformal:longitude_of_central_meridian = -107 ;"<<endl;
outstream<<"Lambert_Conformal:standard_parallel = 50, 50 ;"<<endl;
outstream<<"Lambert_Conformal:latitude_of_projection_origin = 50 ;"<<endl;
outstream<<"Lambert_Conformal:false_easting = 5632632. ;"<<endl;
outstream<<"Lambert_Conformal:false_northing = 4612545.5 ;"<<endl;
outstream<<"double y(y) ;"<<endl;
outstream<<"y:units = \"meter\" ;"<<endl;
outstream<<"y:long_name = \"y coordinate of projection\" ;"<<endl;
outstream<<"y:standard_name = \"projection_y_coordinate\" ;"<<endl;
outstream<<"double x(x) ;"<<endl;
outstream<<"x:units = \"meter\" ;"<<endl;
outstream<<"x:long_name = \"x coordinate of projection\" ;"<<endl;
outstream<<"x:standard_name = \"projection_x_coordinate\" ;"<<endl;
outstream<<"int time(time) ;"<<endl;
outstream<<"time:long_name = \"simulation time\" ;"<<endl;
outstream<<"time:units = \"year since 1978 0:0:0\" ;"<<endl;
outstream<<"time:calendar = \"365_day\" ;"<<endl;
outstream<<"double LON(y, x) ;"<<endl;
outstream<<"LON:units = \"degrees_east\" ;"<<endl;
outstream<<"LON:long_name = \"longitude coordinate\" ;"<<endl;
outstream<<"LON:standard_name = \"longitude\" ;"<<endl;
outstream<<"double LAT(y, x) ;"<<endl;
outstream<<"LAT:units = \"degrees_north\" ;"<<endl;
outstream<<"LAT:long_name = \"latitude coordinate\" ;"<<endl;
outstream<<"LAT:standard_name = \"latitude\" ;"<<endl;
outstream<<"float "<<variable<<"(time, y, x) ;"<<endl;

// Here need to be changed for any change of variable
outstream<<variable<<":units = "<<"\" gN m^-2 d^-1 \""<<";"<<endl;
outstream<<variable<<":long_name = "<<"\" terrestrial flux of N2O \""<<"; "<<endl;
//End

outstream<<variable<<":missing_value = -9999.0;"<<endl;

outstream<<variable<<":coordinates = \"lat lon\" ;"<<endl;
outstream<<variable<<":grid_mapping = \"Lambert_Conformal\" ;"<<endl;

// global attributes:
outstream<<":title = \"Terrestrial fluxes of CH4 and N2O over North America\" ;"<<endl;
outstream<<":source = \"Generated by Dynamic Land Ecosystem Model (DLEM)\" ;"<<endl;
outstream<<":institution = \"School of Forestry and  Wildlife Sci., Auburn University\" ;"<<endl;
outstream<<":history = \"Year-Month-Date Hr:Min:Sec : NetCDF file was generated\" ;"<<endl;
outstream<<":references = \"For DLEM model:https://fp.auburn.edu/sfws/esra/ \" ;"<<endl;
outstream<<":comment = \"Positive direction: downward.\" ;"<<endl;
outstream<<":conventions = \"CF-1.3\" ;"<<endl;
outstream<<"data:"<<endl;
outstream<<"Lambert_Conformal = -1 ;"<<endl;
outstream<<"y="<<endl;
for(int i = 0; i < (nrow - 1); i++)
outstream<<y[i]<<", ";
outstream<<y[nrow-1]<<";"<<endl;

outstream<<"x="<<endl;
for(int j = 0; j < (ncol - 1); j++)
outstream<<x[j]<<", ";
outstream<<x[ncol-1]<<";"<<endl;

outstream<<"time = "<<endl;
for(int i = 1; i < time; i++)
outstream<<i<<", ";
outstream<<time<<";"<<endl;

outstream<<"LON = "<<endl;
for(int t = 0; t < (time - 1); t++)
{
        for(int r = 0; r < nrow; r++)
        {
                for(int c = 0; c < ncol; c++)  {
                outstream<<lon[r][c]<<", ";
                }
                outstream<<endl;
        }
}
        for(int r = 0; r < (nrow - 1); r++)
        {
                for(int c = 0; c < ncol; c++)  {
                outstream<<lon[r][c]<<", ";
                }
                outstream<<endl;
        }

                for(int c = 0; c < (ncol - 1); c++)  
                outstream<<lon[nrow-1][c]<<", ";
                outstream<<lon[nrow-1][ncol-1]<<";"<<endl;

outstream<<"LAT = "<<endl;
for(int t = 0; t < (time - 1); t++)
{
        for(int r = 0; r < nrow; r++)
        {
                for(int c = 0; c < ncol; c++)  {
                outstream<<lat[r][c]<<", ";
                }
                outstream<<endl;
        }
}
        for(int r = 0; r < (nrow - 1); r++)
        {
                for(int c = 0; c < ncol; c++)  {
                outstream<<lat[r][c]<<", ";
                }
                outstream<<endl;
        }

                for(int c = 0; c < (ncol - 1); c++)
                outstream<<lat[nrow-1][c]<<", ";
                outstream<<lat[nrow-1][ncol-1]<<";"<<endl;


outstream<<variable<<" = "<<endl;
for(int t = 0; t < (time - 1); t++)
{
        for(int r = 0; r < nrow; r++)
        {
                for(int c = 0; c < ncol; c++)  {
                outstream<<lat[r][c]<<", ";
                }
                outstream<<endl;
        }
}
        for(int r = 0; r < (nrow - 1); r++)
        {
                for(int c = 0; c < ncol; c++)  {
                outstream<<value[time-1][r][c]<<", ";
                }
                outstream<<endl;
        }

                for(int c = 0; c < (ncol - 1); c++)
                outstream<<value[time-1][nrow-1][c]<<", ";
                outstream<<value[time-1][nrow-1][ncol-1]<<";"<<endl;

outstream<<"}"<<endl;

outstream.close();

return 0;
}
